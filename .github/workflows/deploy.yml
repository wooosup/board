name: Deploy to EC2

on:
  push:
    branches:
      - main
  pull_request:
    branches: [ "main" ]

jobs:
  build-and-deploy:
    runs-on: ubuntu-latest

    steps:
      # 코드 체크아웃
      - name: Checkout
        uses: actions/checkout@v3

      # JDK 설정
      - name: Set up JDK 17
        uses: actions/setup-java@v3
        with:
          java-version: '17'
          distribution: 'temurin'

      # Gradle 권한 부여
      - name: Grant execute permission for gradlew
        run: chmod +x ./gradlew

      # Spring Boot 애플리케이션 빌드
      - name: Build with Gradle
        run: ./gradlew build

      # 빌드된 JAR 파일을 EC2로 복사
      - name: Copy JAR to EC2
        uses: appleboy/scp-action@master
        with:
          host: ${{ secrets.EC2_HOST }}
          username: ${{ secrets.EC2_USERNAME }}
          key: ${{ secrets.EC2_SSH_PRIVATE_KEY }}
          source: "build/libs/*.jar" # 빌드된 JAR 파일 경로
          target: "/home/ubuntu"     # EC2에 파일이 저장될 경로

      # EC2에 접속해서 배포 스크립트 실행
      - name: Deploy on EC2
        uses: appleboy/ssh-action@master
        with:
          host: ${{ secrets.EC2_HOST }}
          username: ${{ secrets.EC2_USERNAME }}
          key: ${{ secrets.EC2_SSH_PRIVATE_KEY }}
          script: |
            # 기존에 실행 중인 Java 프로세스 종료
            pgrep java | xargs kill -9
            # 새로운 JAR 파일 실행
            nohup java -jar -Dspring.profiles.active=prod /home/ubuntu/*.jar > /home/ubuntu/application.log 2>&1 &